
&НаКлиенте
Перем НеВыполнятьОбработкуАктивацииСтроки;

&НаСервере
Функция ПолучитьHTML(Параметры)
	
	
	
КонецФункции

Функция ПолучитьСтруктуруЗадачи()
	
	Возврат Новый Структура("Проект, Статус, Наименование, СтоимостьЧаса, Факт, Сумма, План, Ответственный, Описание, Комментарий",
							Проект, Статус, Наименование, СтоимостьЧаса, Факт, Сумма, План, текПользователь, Описание, Комментарий);
КонецФункции

&НаСервере
Функция СохранитьЗадачу()
	
	Если ПустаяСтрока(Наименование) Тогда	// пустую задачу не сохраняем и игнорруем
		Возврат истина; КонецЕсли;
	
	Если текЗадача.Пустая() Тогда	
		ДокЗад = Документы.Задача.СоздатьДокумент();
		ДокЗад.ДатаСоздания = ТекущаяДата();
		ДокЗад.Автор 		= текПользователь;
	Иначе 
		ДокЗад = текЗадача.ПолучитьОбъект(); КонецЕсли;
	
	Структура = ПолучитьСтруктуруЗадачи();
	Структура.Вставить("Дата", ТекущаяДата());
	ДокЗад.Заполнить(Новый Структура("Шапка", Структура));
	
	НачатьТранзакцию();
	
	Если Не ОбщиеФункции.ЗаписатьИзмененияОбъекта(ДокЗад, Структура, РежимЗаписиДокумента.Проведение, "Дата, Комментарий") Тогда
		ОтменитьТранзакцию();
		Возврат Ложь; КонецЕсли;
	
	Если не ПустаяСтрока(Комментарий) Тогда
		Запись = РегистрыСведений.КомментарииЗадач.СоздатьМенеджерЗаписи();
		Запись.Период 		= Структура.Дата;
		Запись.Задача 		= ДокЗад.Ссылка;
		Запись.Комментарий 	= Комментарий;
		Запись.Автор 		= текПользователь; 
		
		Если Не ОбщиеФункции.ЗаписатьИСообщитьЕслиОшибка(Запись) Тогда
			ОтменитьТранзакцию();
			Возврат Ложь; КонецЕсли; КонецЕсли;
	
	ЗафиксироватьТранзакцию();
	
	текЗадача = ДокЗад.Ссылка;
	
	Возврат Истина;
	
КонецФункции
&НаСервере
Процедура ОбновитьПрошлыеКомментарии()
	
	Запрос = Новый Запрос("ВЫБРАТЬ Комментарий, Период ИЗ РегистрСведений.КомментарииЗадач ГДЕ Задача = &Задача УПОРЯДОЧИТЬ ПО период Убыв");
	Запрос.УстановитьПараметр("Задача", текЗадача);
	
	масскомментов = Новый Массив;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		масскомментов.Добавить(Формат(Выборка.Период, "ДЛФ=DDT"));
		масскомментов.Добавить(Выборка.Комментарий); КонецЦикла;
	
	ПредыдущиеКомментарии = СтрСоединить(масскомментов, Символы.ПС);
	
КонецПроцедуры
&НаСервере
Процедура ОбновитьЗадачу()
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма, текЗадача);
	ОбновитьПрошлыеКомментарии();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СписокЗадач.Параметры.УстановитьЗначениеПараметра("ПустаяДата", '00010101');
	
	текПользователь = ПараметрыСеанса.ТекущийПользователь;
	ТекстHTML = ПолучитьHTML(Новый Структура);
	УстановитьФильтПоПроекту();
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьНоваяЗадачаНажатие(Элемент)
	
	стПроект 		= Проект;
	стПользователь 	= текПользователь;
	
	Если остановитьТаймер() Тогда
		Если СохранитьЗадачу() Тогда
			Элементы.Задачи.Обновить(); КонецЕсли; КонецЕсли;
	
	текЗадача = ПредопределенноеЗначение("Документ.Задача.ПустаяСсылка");
	ОбновитьЗадачу(); 
		
	Проект 			= стПроект;
	текПользователь = стПользователь;
	
КонецПроцедуры

&НаКлиенте
Процедура loopTimer() Экспорт 
	
	Прошло = ТекущаяДата() - ДатаНачалаОтчетаТаймера;
	ДатаНачалаОтчетаТаймера = ТекущаяДата();
	
	Факт = Факт + Прошло;
	
	ТаймерСчетчик = '00010101' + Факт;
	
КонецПроцедуры
&НаКлиенте
Функция ОстановитьТаймер()
	
	// Возвращает истина если таймер был запущен и остановлен и ложь если не был запущен
	
	Если ДатаНачалаОтчетаТаймера = '00010101' Тогда
		Возврат Ложь;
	Иначе
	
		ДатаНачалаОтчетаТаймера = '00010101';
		ОтключитьОбработчикОжидания("loopTimer");
			
		Элементы.ТаймерСчетчик.Видимость = Ложь;
		Элементы.Таймер.ЦветФона = новый Цвет;
		Элементы.Таймер.Заголовок = "Таймер"; 
		
		Возврат Истина; КонецЕсли;
	
КонецФункции
&НаКлиенте
Процедура ЗапуститьТаймер()
	
	ДатаНачалаОтчетаТаймера = ТекущаяДата();
	ПодключитьОбработчикОжидания("loopTimer", 1, Ложь);
		
	Элементы.ТаймерСчетчик.Видимость = Истина;
	Элементы.Таймер.ЦветФона = новый Цвет(255, 255, 153);
	
КонецПроцедуры


&НаКлиенте
Процедура ЗадачиПриАктивизацииСтроки(Элемент)
	
	Если НеВыполнятьОбработкуАктивацииСтроки = Истина Тогда
		НеВыполнятьОбработкуАктивацииСтроки = Ложь;
		Возврат КонецЕсли;
	
	ТекСтрока = Элементы.Задачи.ТекущаяСтрока;
	Если ТекСтрока <> Неопределено И ТекСтрока <> текЗадача Тогда
		
		Если ОстановитьТаймер() Тогда
			Если СохранитьЗадачу() Тогда
				Элементы.Задачи.Обновить();КонецЕсли; КонецЕсли;
		
		текЗадача = ТекСтрока;
		ОбновитьЗадачу(); КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Таймер(Команда)
	
	Если ДатаНачалаОтчетаТаймера = '00010101' Тогда
		НеВыполнятьОбработкуАктивацииСтроки = Истина;
	    ЗапуститьТаймер();
		НеВыполнятьОбработкуАктивацииСтроки = Истина;
		Элементы.Задачи.ТекущаяСтрока = текЗадача;
	Иначе	
		остановитьТаймер();
		Если СохранитьЗадачу() Тогда
			Элементы.Задачи.ТекущаяСтрока = текЗадача;
			Элементы.Задачи.Обновить(); КонецЕсли; КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииРеквизитаЗадачи(Элемент)
	
	Сумма = СтоимостьЧаса * ?(РасчетПоФакту, Факт / 3600, План);
	
	Если СохранитьЗадачу() Тогда
		Элементы.Задачи.Обновить(); КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийПриИзменении(Элемент)
	
	Если СохранитьЗадачу() Тогда
		Комментарий = "";
		ОбновитьПрошлыеКомментарии();
		Элементы.Задачи.Обновить(); КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьФильтПоПроекту()
	
	ОтборыСписковКлиентСервер.УстановитьЭлементОтбора(СписокЗадач.Отбор, "Проект", Проект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроектПриИзменении(Элемент)
	
	УстановитьФильтПоПроекту()
	
КонецПроцедуры
