
Функция ПолучитьОтборПользовательскихНастроек(КомпоновщикНастроек) Экспорт
	
	Для Каждого Элемент Из КомпоновщикНастроек.ПользовательскиеНастройки.Элементы Цикл
		
		Если ТипЗнч(Элемент) = Тип("ОтборКомпоновкиДанных") Тогда
			Возврат Элемент КонецЕсли; КонецЦикла;
	
КонецФункции

Процедура УдалитьЭлементОтбораПользовательскихНастроек(КомпоновщикНастроек, ИмяПоля, СнятьИспользование = Ложь) Экспорт
	
	Отбор = ПолучитьОтборПользовательскихНастроек(КомпоновщикНастроек);
	
	Если Отбор <> Неопределено Тогда
		УдалитьЭлементОтбора(Отбор, ИмяПоля, СнятьИспользование); КонецЕсли;
	
КонецПроцедуры
Процедура УдалитьЭлементОтбора(Отбор, ИмяПоля, СнятьИспользование = Ложь) Экспорт
	
	ЭлементыОтбора = Отбор.Элементы;
	ПолеКомпоновки = Новый ПолеКомпоновкиДанных(ИмяПоля);
	
	Для Каждого ЭлементОтбора Из ЭлементыОтбора Цикл
		Если ТипЗнч(ЭлементОтбора) = Тип("ЭлементОтбораКомпоновкиДанных") И ЭлементОтбора.ЛевоеЗначение = ПолеКомпоновки Тогда
			
			Если СнятьИспользование Тогда
					ЭлементОтбора.Использование = Ложь;
			Иначе	ЭлементыОтбора.Удалить(ЭлементОтбора); КонецЕсли; КонецЕсли; КонецЦикла;
	
КонецПроцедуры
//Удаляет элемент отбора динамического списка
//
//Параметры:
//Список  - обрабатываемый динамический список,
//ИмяПоля - имя поля компоновки, отбор по которому нужно удалить
//
Процедура УдалитьЭлементОтбораСписка(Список, ИмяПоля, СнятьИспользование = Ложь) Экспорт
	
	УдалитьЭлементОтбора(Список.Отбор, ИмяПоля, СнятьИспользование);
	
КонецПроцедуры // УдалитьЭлементОтбораСписка()

Процедура УстановитьЭлементОтбораПользовательскихНастроек(КомпоновщикНастроек, ИмяПоля, ПравоеЗначение, ВидСравнения = Неопределено, Замещать = Истина) Экспорт
	
	Отбор = ПолучитьОтборПользовательскихНастроек(КомпоновщикНастроек);
	
	Если Отбор <> Неопределено Тогда
		УстановитьЭлементОтбора(Отбор, ИмяПоля, ПравоеЗначение, ВидСравнения, Замещать); КонецЕсли;
	
КонецПроцедуры
Процедура УстановитьЭлементОтбора(Отбор, ИмяПоля, ПравоеЗначение, ВидСравнения = Неопределено, Замещать = Истина) Экспорт
	
	// Если замещать тогда будет обновлен текущий элемент если такой есть по левому значению, ложь тогда просто добавлен
	
	Перем ЭлементОтбора;
	
	ПолеОтбора = Новый ПолеКомпоновкиДанных(ИмяПоля);
	
	Если Замещать Тогда
	
		Для Каждого текЭлементОтбора Из Отбор.Элементы Цикл
			Если текЭлементОтбора.ЛевоеЗначение = ПолеОтбора Тогда
				ЭлементОтбора = текЭлементОтбора;
				Прервать; КонецЕсли; КонецЦикла; КонецЕсли;
		
	Если ЭлементОтбора = Неопределено Тогда
		ЭлементОтбора = Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных")); КонецЕсли;
	
	ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(ИмяПоля);	
	ЭлементОтбора.ВидСравнения   = ?(ВидСравнения = Неопределено, ВидСравненияКомпоновкиДанных.Равно, ВидСравнения);
	ЭлементОтбора.Использование  = Истина;
	ЭлементОтбора.ПравоеЗначение = ПравоеЗначение;

КонецПроцедуры
//Устанавливает элемент отбор динамического списка
//
//Параметры:
//Список			- обрабатываемый динамический список,
//ИмяПоля			- имя поля компоновки, отбор по которому нужно установить,
//ВидСравнения		- вид сравнения отбора, по умолчанию - Равно,
//ПравоеЗначение 	- значение отбора
//
Процедура УстановитьЭлементОтбораСписка(Список, ИмяПоля, ПравоеЗначение, ВидСравнения = Неопределено, Замещать = Истина) Экспорт
	
	УстановитьЭлементОтбора(Список.Отбор, ИмяПоля, ПравоеЗначение, ВидСравнения, Замещать);
	
КонецПроцедуры // УстановитьЭлементОтбораСписка()
//Изменяет элемент отбора динамического списка
//
//Параметры:
//Список         - обрабатываемый динамический список,
//ИмяПоля        - имя поля компоновки, отбор по которому нужно установить,
//ВидСравнения   - вид сравнения отбора, по умолчанию - Равно,
//ПравоеЗначение - значение отбора,
//Установить     - признак необходимости установить отбор
//
Процедура ИзменитьЭлементОтбораСписка(Список, ИмяПоля, ПравоеЗначение = Неопределено, Установить = Ложь, ВидСравнения = Неопределено) Экспорт
	
	УдалитьЭлементОтбораСписка(Список, ИмяПоля);
	
	Если Установить Тогда
		УстановитьЭлементОтбораСписка(Список, ИмяПоля, ПравоеЗначение, ВидСравнения);
	КонецЕсли;
	
КонецПроцедуры // ИзменитьЭлементОтбораСписка()
