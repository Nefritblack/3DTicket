#Область Управлени_конфигуратором

&НаСервере
Процедура ОбновитьВидимостьКонфигуратора()
	
	ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(Объект.ПользовательИБ);
	
	ЕстьВКонфигураторе 	= ПользовательИБ <> Неопределено;
	ЭтоНовый 			= Объект.Ссылка.Пустая();
	
	Элементы.ГруппаЕстьВКонфигураторе.Видимость = Не ЭтоНовый И ЕстьВКонфигураторе;
	Элементы.ГруппаНетВКонфигураторе.Видимость 	= Не ЭтоНовый И Не ЕстьВКонфигураторе;
	
	Если ЕстьВКонфигураторе Тогда
		
		ВходРазрешен 	= ПользовательИБ.АутентификацияСтандартная ИЛи ПользовательИБ.АутентификацияОС Или ПользовательИБ.АутентификацияOpenID;
		ИмяВхода 		= ПользовательИБ.Имя; КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗаписатьНовыйПароль(Пароль)
	
	ПользИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(Объект.ПользовательИБ);
	ПользИБ.Пароль = Пароль;
	Возврат ОбщиеФункции.ЗаписатьИСообщитьЕслиОшибка(ПользИБ);

КонецФункции
&НаКлиенте
Процедура ПарольВведен(Пароль, ДопПараметры) Экспорт
	
	Если Пароль <> Неопределено И Не ПустаяСтрока(Пароль) И ЗаписатьНовыйПароль(Пароль) Тогда
		ПоказатьОповещениеПользователя("пароль установлен"); КонецЕсли;
	
КонецПроцедуры
&НаКлиенте
Процедура УстановитьПароль(Команда)
	
	ПоказатьВводСтроки(Новый ОписаниеОповещения("ПарольВведен", ЭтаФорма), "123456", "новый пароль");
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНовогоПользователяПоПаролю(Пароль, ДопПараметры) Экспорт
	
	Если Не ПустаяСтрока(Пароль) И СоздатьПользователяНаСервере(Пароль) Тогда
		ПоказатьОповещениеПользователя("Пользователь создан"); КонецЕсли;
	
КонецПроцедуры
&НаКлиенте
Процедура ИмяВходаДляНовгоПользователяИБ(новИмяВхода, ДопПараметры) Экспорт
	
	Если новИмяВхода <> Неопределено И Не ПустаяСтрока(новИмяВхода) Тогда
		ИмяВхода = новИмяВхода;
		ПоказатьВводСтроки(Новый ОписаниеОповещения("СоздатьНовогоПользователяПоПаролю", ЭтаФорма), "123456","Пароль"); КонецЕсли;
	
КонецПроцедуры
&НаСервере
Функция СоздатьПользователяНаСервере(Пароль)
	
	ПользовательИБ = ПользователиИнформационнойБазы.СоздатьПользователя();
	ПользовательИБ.АутентификацияСтандартная = Истина;
	ПользовательИБ.Имя 			= ИмяВхода;
	ПользовательИБ.Пароль 		= Пароль;
	ПользовательИБ.ПолноеИмя 	= ?(ПустаяСтрока(Объект.Представление), Объект.Наименование, Объект.Представление);
	ПользовательИБ.Роли.Добавить(Метаданные.Роли.root);
	
	НачатьТранзакцию();
	
	Если Не ОбщиеФункции.ЗаписатьИСообщитьЕслиОшибка(ПользовательИБ) Тогда
		ОтменитьТранзакцию();
		Возврат Ложь; КонецЕсли;
	
	Объект.ПользовательИБ = ПользовательИБ.УникальныйИдентификатор;
	
	Если Не Записать() Тогда 
		ОтменитьТранзакцию(); 
		Возврат Ложь; КонецЕсли;
	
	ЗафиксироватьТранзакцию();
	
	ОбновитьВидимостьКонфигуратора();
	Возврат Истина;
	
КонецФункции
&НаКлиенте
Процедура СоздатьПользователя(Команда)
	
	ПоказатьВводСтроки(Новый ОписаниеОповещения("ИмяВходаДляНовгоПользователяИБ", ЭтаФорма), СтрЗаменить(СтрЗаменить(Объект.Наименование, ".", ""), " ", ""),"Имя входа в базу");
	
КонецПроцедуры

&НаСервере
Функция ИзменитьИмяВхода()
	
	ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(Объект.ПользовательИБ);
	ПользовательИБ.Имя = ИмяВхода;
	
	Возврат ОбщиеФункции.ЗаписатьИСообщитьЕслиОшибка(ПользовательИБ);
	
КонецФункции
&НаКлиенте
Процедура ИмяВходаПриИзменении(Элемент)
	
	Если ИзменитьИмяВхода() Тогда
		ПоказатьОповещениеПользователя("Имя входа изменено") КонецЕсли;
		
КонецПроцедуры

&НаСервере
Функция ИзменитьРазрешенияВходаНаСервере()
	
	ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(Объект.ПользовательИБ);
	
	Если ВходРазрешен Тогда
		ПользовательИБ.АутентификацияСтандартная = Истина;
	Иначе
		ПользовательИБ.АутентификацияСтандартная 	= Ложь;
		ПользовательИБ.АутентификацияОС 			= Ложь;
		ПользовательИБ.АутентификацияOpenID 		= Ложь; КонецЕсли;
	
	Возврат ОбщиеФункции.ЗаписатьИСообщитьЕслиОшибка(ПользовательИБ);
	
КонецФункции
&НаКлиенте
Процедура ВходРазрешенПриИзменении(Элемент)
	
	Если ИзменитьРазрешенияВходаНаСервере() Тогда
		ПоказатьОповещениеПользователя("Пользователь " + ?(ВходРазрешен, "активирован", "заблокирован")); КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Обновим видимость фигулин конфигуратора
	
	ОбновитьВидимостьКонфигуратора();
	
КонецПроцедуры

